function isCanvasSupported(){var a=document.createElement("canvas");return!(!a.getContext||!a.getContext("2d"))}var welcome=angular.module("welcome",[]);welcome.controller("WelcomeController",["$scope","$location","Drawings",function(a,b,c){a.newDrawing={},a.init=function(){c.query(function(b){a.drawings=b})},a.create=function(){var d=new fabric.LabeledCanvas;d.name=a.newDrawing.name,d.description=a.newDrawing.description,c.save(d,function(c){console.log("got something "+c._id),a.newDrawing=null,b.path("drawings/"+c._id)},function(a){console.log("got error "+a.status)})},a.socket.on("add-drawing",function(b){a.$apply(function(){a.drawings.push(b)})}),a.socket.on("remove-drawing",function(b){a.$apply(function(){a.drawings.forEach(function(c,d){c._id===b&&a.drawings.splice(d,1)})})}),a.socket.on("connect",function(){console.log("Connected to server")}),a.socket.on("disconnect",function(){console.log("DIS-Connected from server")})}]);var about=angular.module("about",[]);about.controller("AboutController",["$scope",function(){}]);var drawings=angular.module("drawings",[]);drawings.controller("DrawingsController",["$scope","$route","$routeParams","Drawings",function(a,b,c,d){a.currentColor="deepskyblue",a.strokeWidth=2,a.drawingMode="free",a.init=function(){d.get({drawingId:c.drawingId},function(b){a.initCanvas(b)},function(a){console.log("error happened "+a)})},a.changeDrawingMode=function(b){a.drawingMode=b||a.drawingMode,a.canvas.discardActiveObject(),a.canvas.changeDrawingMode(a.drawingMode)},a.changeLayerPosition=function(b){return a.canvas.updateLayerPosition(b),!1},a.updateColor=function(b){a.currentColor=b,a.canvas.updateCurrentColor(b)},a.initCanvas=function(b){a.drawing=b;var c={name:a.drawing.name,_id:a.drawing._id,description:a.drawing.description,currentColor:a.currentColor,strokeWidth:a.strokeWidth,drawingMode:a.drawingMode,socket:a.socket,selection:!1};a.canvas=new CanvasWrapper("c",c),a.canvas.loadFromJSON(b),a.canvas.discardActiveObject();var d=function(){return{height:window.innerHeight,width:window.innerWidth}};a.canvas.updateCanvasSize(d()),$(window).on("resize",function(){a.canvas.updateCanvasSize(d())})},a.$on("$destroy",function(){a.canvas.dispose(),console.log("FYI - Destroyed scope for DrawingController")})}]),angular.module("drawings").factory("Drawings",["$resource",function(a){return a("drawings/:drawingId",{drawingId:"@_id"},{update:{method:"PUT"}})}]);var app=angular.module("app",["ngRoute","ngResource","welcome","about","drawings"]);app.config(["$routeProvider",function(a){a.when("/welcome",{templateUrl:"views/welcome/welcome.tpl.html"}).when("/about",{templateUrl:"views/about/about.tpl.html"}).when("/drawings/:drawingId",{templateUrl:"views/drawings/drawing.tpl.html"}).when("/unsupported",{templateUrl:"unsupported.html"}).otherwise({templateUrl:"views/welcome/welcome.tpl.html"})}]),app.controller("MainController",["$scope","$rootScope","$log","$location",function(a,b,c,d){a.socket=io.connect(),b.$on("$locationChangeStart",function(){isCanvasSupported()||(c.info("routing to unsupported"),d.url("/unsupported"))})}]),window.console=window.console||function(){var a={};return a.log=a.warn=a.debug=a.info=a.error=a.time=a.dir=a.profile=a.clear=a.exception=a.trace=a.assert=function(){},a}();